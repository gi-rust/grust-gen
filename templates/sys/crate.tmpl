<%!
  from grust.gi import ast
%>\
<%
  namespace = mapper.crate.namespace
%>\
// This file is generated by grust-gen

#![crate_name = "${mapper.crate.name}"]
#![crate_type = "lib"]

extern crate gtypes;
% for xc in mapper.extern_crates():
%     if xc.name == xc.local_name:
extern crate ${xc.name};
%     else:
extern crate ${xc.name} as ${xc.local_name};
%     endif
% endfor

use gtypes::*;

% for node in namespace.names.values():
%     if isinstance(node, ast.Alias):
${alias(node)}
%     endif
% endfor

<%def name="alias(node)">\
// Here be type ${node.ctype}, alias for ${node.target}
</%def>
